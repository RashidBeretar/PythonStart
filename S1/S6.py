# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод: Вывод:
# 7 3 3 2 12
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)

from random import randint
def T39():
    amount_of_alements_first_list = int(input("Введите количество элементов в первом массиве: "))
    amount_of_alements_second_list = int(input("Введите количество элементов во втором массиве: "))

    list_first = list()
    # for i in range(amount_of_alements_first_list):
    #    list_first.append(input("Введите элементы первого множества: "))
    for _ in range(amount_of_alements_first_list):
        list_first.append(randint(0, 10))
    print(*list_first)

    list_second = list()
    # for i in range(amount_of_alements_second_list):
    #    list_second.append(input("Введите элементы второго множества: "))
    for _ in range(amount_of_alements_second_list):
        list_second.append(randint(0, 10))
    print(*list_second)

    result_ar = []
    for i in list_first:
        if i not in list_second: result_ar.append(i)

    print(result_ar)

# T39()

# Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# Ввод:
# 5
# 1 5 1 5 1
# Вывод:
# 2
# (каждое число вводится с новой строки)

def T39():
    n = int(input("Введите количество элементов в массиве: "))
    
    n_ar = []
    for _ in range(n):
        n_ar.append(randint(0, 10))

    result_cnt = 0
    for i in range(1, n - 1):
        if (n_ar[i - 1] < n_ar[i]) and (n_ar[i + 1] < n_ar[i]): result_cnt += 1

    print(n_ar)
    print(result_cnt)

# T39()

# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод:
# 1 2 3 2 3
# Вывод:
# 2

# Ввод:
# 1 2 3 2 3 3 3

# 1  3  3 3 3
# Вывод:
# 2

from random import randint
def T43():
    n = int(input("Введите количество элементов в массиве: "))
    
    n_ar = []
    for _ in range(n):
        n_ar.append(randint(0, 10))

    result_cnt = 0
    for i in range(n - 1):
        for j in range (i + 1, n):
            if n_ar[i] == n_ar[j]: result_cnt += 1

    print(n_ar)
    print(result_cnt)

# T43()

# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 10 в пятой
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод:
# 300
# Вывод:
# 220 284

# k = 10
# 2 3
# 4 9

def sum_del(n):
    # сумма делителей числа n (включая 1, но исключая само n)
    summ = 0
    for i in range(1, n - 1):
        # summ += i if n % i == 0 else 0
        if n % i == 0: 
            summ += i

    return summ

def T45():
    k = int(input("Введите число: "))
    k = 300
    k = 3000
    if k >= 10 ** 5: 
        print("Ошибка!")
        return False
    
    for i in range(k - 1):
        for j in range (i + 1, k):
            if sum_del(i) == j and sum_del(j) == i: 
                print(i, j)

T45()
# print(sum_del(10))
